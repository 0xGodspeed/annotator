generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String        @id @db.Uuid
  name               String
  email              String        @unique
  createdAt          DateTime      @default(now())
  annotations        Annotation[]
  settings           Settings?
  summaryAssignments UserSummary[]

  @@map("profiles")
}

model TextSummary {
  id              String        @id @default(uuid()) @db.Uuid
  text            String
  summary         String
  createdAt       DateTime      @default(now())
  level           Level?
  model           Model?
  pmid            String?
  annotations     Annotation[]
  userAssignments UserSummary[]
}

model UserSummary {
  id           String      @id @default(uuid()) @db.Uuid
  userId       String      @db.Uuid
  summaryId    String      @db.Uuid
  assignedAt   DateTime    @default(now())
  completed    Boolean     @default(false)
  annotationId String?     @db.Uuid
  annotation   Annotation? @relation(fields: [annotationId], references: [id])
  textSummary  TextSummary @relation(fields: [summaryId], references: [id], onDelete: Cascade)
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Annotation {
  id                String        @id @default(uuid()) @db.Uuid
  userId            String        @db.Uuid
  textSummaryId     String        @db.Uuid
  comprehensiveness Int           @default(0)
  layness           Int           @default(0)
  factuality        Int           @default(0)
  usefulness        Int           @default(0)
  labels            Json?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  textSummary       TextSummary   @relation(fields: [textSummaryId], references: [id], onDelete: Cascade)
  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userSummary       UserSummary[]

  @@unique([userId, textSummaryId])
}

model Settings {
  id                String  @id @default(uuid()) @db.Uuid
  userId            String  @unique @db.Uuid
  summaryWindowDays Int     @default(7)
  isAdmin           Boolean @default(false)
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Level {
  LAYMAN
  PREMED
  RESEARCHER
  EXPERT
}

enum Model {
  GPT4
  GPT35
  CLAUDE2
  CLAUDE3
  LLAMA2
  MISTRAL
  GPT4O
}
